(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5485],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(l,".").concat(c)]||m[c]||d[c]||s;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<s;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=n(2122),r=n(9756),s=(n(7294),n(3905)),i={id:"hasMessage",title:"HasMessage APIs",sidebar_label:"HasMessage",slug:"/apis/traits/message/hasMessage"},o=void 0,l={unversionedId:"apis/traits/message/hasMessage",id:"apis/traits/message/hasMessage",isDocsHomePage:!1,title:"HasMessage APIs",description:"Namespace",source:"@site/docs/apis/traits/message/hasMessage.md",sourceDirName:"apis/traits/message",slug:"/apis/traits/message/hasMessage",permalink:"/laravel-chat-system/docs/next/apis/traits/message/hasMessage",editUrl:"https://github.com/myckhel/laravel-chat-system-docs/edit/master/docs/apis/traits/message/hasMessage.md",version:"current",frontMatter:{id:"hasMessage",title:"HasMessage APIs",sidebar_label:"HasMessage",slug:"/apis/traits/message/hasMessage"},sidebar:"docs",previous:{title:"HasChatEvent",permalink:"/laravel-chat-system/docs/next/apis/traits/chatEvent/hasChatEvent"},next:{title:"Message Events",permalink:"/laravel-chat-system/docs/next/apis/events/message/events"}},p=[{value:"<strong>Namespace</strong>",id:"namespace",children:[{value:"<code>messages()</code>",id:"messages",children:[]},{value:"<code>undelivered()</code>",id:"undelivered",children:[]},{value:"<code>conversations()</code>",id:"conversations",children:[]},{value:"<code>relatedToMessage()</code>",id:"relatedtomessage",children:[]},{value:"<code>relatedToConversation()</code>",id:"relatedtoconversation",children:[]}]}],u={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"namespace"},(0,s.kt)("strong",{parentName:"h2"},"Namespace")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Myckhel\\ChatSystem\\Traits\\ChatEvent")),(0,s.kt)("h3",{id:"messages"},(0,s.kt)("inlineCode",{parentName:"h3"},"messages()")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"adds query for model's messages")),(0,s.kt)("h4",{id:"return"},"@Return"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"type ",(0,s.kt)("inlineCode",{parentName:"li"},"QueryBuilder"))),(0,s.kt)("h4",{id:"params"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?conversation"))," | conversation messages to query for | ",(0,s.kt)("inlineCode",{parentName:"li"},"IConversation|int"))),(0,s.kt)("h4",{id:"params-1"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?otherUser"))," | adds where otherUser belongs to message  | ",(0,s.kt)("inlineCode",{parentName:"li"},"string"))),(0,s.kt)("h4",{id:"params-2"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?reply"))," | adds where reply query | ",(0,s.kt)("inlineCode",{parentName:"li"},"array"))),(0,s.kt)("h4",{id:"params-3"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?type"))," | adds where type query | ",(0,s.kt)("inlineCode",{parentName:"li"},"string"))),(0,s.kt)("h3",{id:"undelivered"},(0,s.kt)("inlineCode",{parentName:"h3"},"undelivered()")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"adds query for model where it messages has not been delivered")),(0,s.kt)("h4",{id:"return-1"},"@Return"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"type ",(0,s.kt)("inlineCode",{parentName:"li"},"QueryBuilder"))),(0,s.kt)("h3",{id:"conversations"},(0,s.kt)("inlineCode",{parentName:"h3"},"conversations()")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"adds query for model's conversations")),(0,s.kt)("h4",{id:"return-2"},"@Return"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"type ",(0,s.kt)("inlineCode",{parentName:"li"},"QueryBuilder"))),(0,s.kt)("h4",{id:"params-4"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?conversation"))," | conversations to query for | ",(0,s.kt)("inlineCode",{parentName:"li"},"IConversation|int"))),(0,s.kt)("h4",{id:"params-5"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?otherUser"))," | adds where otherUser is a participant | ",(0,s.kt)("inlineCode",{parentName:"li"},"string"))),(0,s.kt)("h4",{id:"params-6"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?type"))," | adds where type query | ",(0,s.kt)("inlineCode",{parentName:"li"},"string"))),(0,s.kt)("h3",{id:"relatedtomessage"},(0,s.kt)("inlineCode",{parentName:"h3"},"relatedToMessage()")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"checks wherther model is related to the given message")),(0,s.kt)("h4",{id:"return-3"},"@Return"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"type ",(0,s.kt)("inlineCode",{parentName:"li"},"bool"))),(0,s.kt)("h4",{id:"params-7"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?message"))," | message to compare relation with | ",(0,s.kt)("inlineCode",{parentName:"li"},"IMessage"))),(0,s.kt)("h3",{id:"relatedtoconversation"},(0,s.kt)("inlineCode",{parentName:"h3"},"relatedToConversation()")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"checks wherther model is related to the given conversation")),(0,s.kt)("h4",{id:"return-4"},"@Return"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"type ",(0,s.kt)("inlineCode",{parentName:"li"},"bool"))),(0,s.kt)("h4",{id:"params-8"},"@Params"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"?conversation"))," | conversation to compare relation with | ",(0,s.kt)("inlineCode",{parentName:"li"},"IConversation"))))}d.isMDXComponent=!0}}]);