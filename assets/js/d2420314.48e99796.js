(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[882],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return g}});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=s.createContext({}),d=function(e){var t=s.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return s.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(n),g=r,p=m["".concat(i,".").concat(g)]||m[g]||u[g]||o;return n?s.createElement(p,a(a({ref:t},c),{},{components:n})):s.createElement(p,a({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4224:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return d},default:function(){return u}});var s=n(2122),r=n(9756),o=(n(7294),n(3905)),a={id:"models",title:"ChatSystem Models",sidebar_label:"Using Models",slug:"/guides/models"},l=void 0,i={unversionedId:"guides/models",id:"guides/models",isDocsHomePage:!1,title:"ChatSystem Models",description:"Using ChatSystem Models",source:"@site/docs/guides/models.md",sourceDirName:"guides",slug:"/guides/models",permalink:"/laravel-chat-system/docs/guides/models",editUrl:"https://github.com/myckhel/laravel-chat-system-docs/edit/master/docs/guides/models.md",version:"current",frontMatter:{id:"models",title:"ChatSystem Models",sidebar_label:"Using Models",slug:"/guides/models"},sidebar:"docs",previous:{title:"Using Providers",permalink:"/laravel-chat-system/docs/guides/providers"},next:{title:"Using Routes",permalink:"/laravel-chat-system/docs/guides/routes"}},d=[{value:"Using ChatSystem Models",id:"using-chatsystem-models",children:[]},{value:"Controlling <code>ChatSystem</code> Models",id:"controlling-chatsystem-models",children:[{value:"Extending <code>ChatSystem</code> Models",id:"extending-chatsystem-models",children:[]},{value:"Registering ChatSystem Models",id:"registering-chatsystem-models",children:[]},{value:"Using registered <code>ChatSystem</code> models",id:"using-registered-chatsystem-models",children:[]}]}],c={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"using-chatsystem-models"},"Using ChatSystem Models"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use Myckhel\\ChatSystem\\Models\\Conversation;\nuse Myckhel\\ChatSystem\\Models\\Message;\nuse Myckhel\\ChatSystem\\Models\\ConversationUser;\nuse Myckhel\\ChatSystem\\Models\\ChatEvent;\n\nConversation::get();\nMessage::get();\nConversationUser::get();\nChatEvent::get();\n")),(0,o.kt)("h2",{id:"controlling-chatsystem-models"},"Controlling ",(0,o.kt)("inlineCode",{parentName:"h2"},"ChatSystem")," Models"),(0,o.kt)("h3",{id:"extending-chatsystem-models"},"Extending ",(0,o.kt)("inlineCode",{parentName:"h3"},"ChatSystem")," Models"),(0,o.kt)("p",null,"You may want to take control of some models, for example, caching model queries.\nYou may take control by extending the models and registering the model through the ",(0,o.kt)("inlineCode",{parentName:"p"},"chatsystem")," config."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"\nnamespace App\\Models;\n\nuse Myckhel\\ChatSystem\\Models\\Message as BaseMessage;\nuse QueryCache;\n\nclass Message extends BaseMessage\n{\n  use QueryCache;\n}\n\n")),(0,o.kt)("h3",{id:"registering-chatsystem-models"},"Registering ChatSystem Models"),(0,o.kt)("p",null,"make sure you have published the chatsystem config file. see ",(0,o.kt)("a",{parentName:"p",href:"../install#publishing-the-config-file"},"publishing-the-config-file")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'...\nreturn [\n...\n  /*\n  * Models\n  */\n  "models" => [\n    ...\n    // register Message model\n    "message"       => "App\\\\Models\\\\Message",\n  ],\n...\n')),(0,o.kt)("h3",{id:"using-registered-chatsystem-models"},"Using registered ",(0,o.kt)("inlineCode",{parentName:"h3"},"ChatSystem")," models"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use App\\Models\\Message;\n\nMessage::get();\n")))}u.isMDXComponent=!0}}]);